basePath: /
definitions:
  handlers.CreateTweetRequest:
    properties:
      content:
        description: |-
          Content of the tweet (max 280 characters)
          required: true
          example: Hello, this is my first tweet!
          max length: 280
        maxLength: 280
        type: string
      user_id:
        description: |-
          ID of the user creating the tweet
          required: true
          example: 123
        type: integer
    required:
    - content
    - user_id
    type: object
  handlers.CreateUserRequest:
    properties:
      username:
        description: |-
          Username must be unique and between 3-50 characters
          required: true
          example: johndoe
        maxLength: 50
        minLength: 3
        type: string
    required:
    - username
    type: object
  handlers.FollowErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  handlers.FollowResponse:
    properties:
      message:
        example: successfully followed user
        type: string
    type: object
  handlers.TimelineErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  handlers.TimelineResponse:
    properties:
      tweet_ids:
        items:
          type: integer
        type: array
      user_id:
        example: 123
        type: integer
    type: object
  handlers.TweetErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  handlers.TweetResponse:
    properties:
      content:
        example: Hello, world!
        type: string
      created_at:
        type: string
      id:
        example: 123
        type: integer
      updated_at:
        type: string
      user_id:
        example: 456
        type: integer
    type: object
  handlers.UserErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  handlers.UserResponse:
    properties:
      id:
        example: 123
        type: integer
      username:
        example: johndoe
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@uala.com
    name: API Support
    url: http://www.uala.com/support
  description: This is a Twitter-like API service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Uala Tweets API
  version: "1.0"
paths:
  /timeline/{user_id}:
    get:
      consumes:
      - application/json
      description: Get a paginated list of tweet IDs from users that the specified
        user follows
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Maximum number of tweets to return (default 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TimelineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.TimelineErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.TimelineErrorResponse'
      summary: Get user timeline
      tags:
      - timeline
  /tweets:
    post:
      consumes:
      - application/json
      description: Create a new tweet with the specified content
      parameters:
      - description: Tweet to create
        in: body
        name: tweet
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateTweetRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.TweetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.TweetErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.TweetErrorResponse'
      summary: Create a new tweet
      tags:
      - tweets
  /tweets/{id}:
    get:
      consumes:
      - application/json
      description: Get a tweet by its ID
      parameters:
      - description: Tweet ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TweetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.TweetErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.TweetErrorResponse'
      summary: Get a tweet
      tags:
      - tweets
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with the specified username
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UserErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.UserErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.UserErrorResponse'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.UserErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.UserErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.UserErrorResponse'
      summary: Get a user
      tags:
      - users
  /users/{id}/follow/{target_id}:
    post:
      consumes:
      - application/json
      description: Follow another user by their ID
      parameters:
      - description: Follower User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Target User ID to follow
        in: path
        name: target_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.FollowResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.FollowErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.FollowErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.FollowErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.FollowErrorResponse'
      summary: Follow a user
      tags:
      - follows
  /users/{id}/unfollow/{target_id}:
    post:
      consumes:
      - application/json
      description: Unfollow a user by their ID
      parameters:
      - description: Follower User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Target User ID to unfollow
        in: path
        name: target_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.FollowResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.FollowErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.FollowErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.FollowErrorResponse'
      summary: Unfollow a user
      tags:
      - follows
  /users/{user_id}/tweets:
    get:
      consumes:
      - application/json
      description: Get all tweets for a specific user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.TweetResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.TweetErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.TweetErrorResponse'
      summary: Get user tweets
      tags:
      - tweets
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
